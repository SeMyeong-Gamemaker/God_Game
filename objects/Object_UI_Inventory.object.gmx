<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Inventory=========================================================================================================================================================================================================================================================\\

/*

i = Column
j = Row

*/
Close_ID = 0;
Inventory_Equipment_Id = 0;
Inventory_Consumable_Id = 0;
Inventory_Misc_Id = 0;

for( Inventory_Size_Height = 0; Inventory_Size_Height &lt; global.UI_Inventory_Size_Height; Inventory_Size_Height++ ) {

    for( Inventory_Size_Width = 0; Inventory_Size_Width &lt; global.UI_Inventory_Size_Width; Inventory_Size_Width++ ) {
    
        global.Inventory_Slot_ID[Inventory_Size_Width,Inventory_Size_Height] = -1;
        with( instance_create( x + 16 + ( 32 * Inventory_Size_Width ), y + 32 + ( 32 * Inventory_Size_Height ), Object_UI_Inventory_Slot ) ) {
        
            global.Inventory_Slot_ID[other.Inventory_Size_Width,other.Inventory_Size_Height] = id;
            Slot_X = 16 + ( 32 * other.Inventory_Size_Width );
            Slot_Y = 32 + ( 32 * other.Inventory_Size_Height );
            Slot_Width = other.Inventory_Size_Width;
            Slot_Height = other.Inventory_Size_Height;
            
        }

    
    }
    
}

with( instance_create( x, y, Object_UI_Bar_4 ) ) {

    other.Bar_ID = id;
    Bar_Type = "Inventory";
    Close_ID = 0;
    UI_X = 0;
    UI_Y = 0;
    depth = other.depth;

}

with( instance_create( x + ( 32 * ( Inventory_Size_Width - 1 ) ), y, Object_UI_Close ) ) {

    other.Close_ID = id;
    Bar_ID = other.Bar_ID;
    Close_Type = "Inventory";
    UI_X = 32 * ( other.Inventory_Size_Width - 1 );
    UI_Y = 0;
    depth = other.depth;

}

with( Bar_ID ) {

    Close_ID = other.Close_ID;

}

with( instance_create( x + 16, y + 16 + ( 32 * Inventory_Size_Height ), Object_UI_Inventory_Equipment ) ) {

    if( global.UI_Inventory_Tab == "Equipment" ) { sprite_index = Sprite_UI_Inventory_Equipment_On; }
    other.Inventory_Equipment_Id = id;
    UI_X = 16;
    UI_Y = 16 + ( 32 * other.Inventory_Size_Height );
    depth = other.depth;

}
with( instance_create( x + 16 + 32, y + 16 + ( 32 * Inventory_Size_Height ), Object_UI_Inventory_Consumable ) ) {

    if( global.UI_Inventory_Tab == "Consumable" ) { sprite_index = Sprite_UI_Inventory_Consumable_On; }
    other.Inventory_Consumable_Id = id;
    UI_X = 16 + 32;
    UI_Y = 16 + ( 32 * other.Inventory_Size_Height );
    depth = other.depth;

}
with( instance_create( x + 16 + 64, y + 16 + ( 32 * Inventory_Size_Height ), Object_UI_Inventory_Misc ) ) {

    if( global.UI_Inventory_Tab == "Misc" ) { sprite_index = Sprite_UI_Inventory_Misc_On; }
    other.Inventory_Misc_Id = id;
    UI_X = 16 + 64;
    UI_Y = 16 + ( 32 * other.Inventory_Size_Height );
    depth = other.depth;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = view_xview[0] + global.UI_Inventory_X;
y = view_yview[0] + global.UI_Inventory_Y;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
