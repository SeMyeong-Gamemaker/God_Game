<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( global.UI_Inventory == true ) {

    with( instance_create( view_xview[0] + global.UI_Inventory_X, view_yview[0] + global.UI_Inventory_Y, Object_UI_Inventory ) ) {
    
        global.UI_Inventory = true;
        global.UI_Inventory_ID = id;
    
    }

}

if( global.UI_Stat == true ) {

    with( instance_create( view_xview[0] + global.UI_Stat_X, view_yview[0] + global.UI_Stat_Y, Object_UI_Stat ) ) {
    
        global.UI_Stat = true;
        global.UI_Stat_ID = id;
    
    }

}

if( global.UI_Skill == true ) {

    with( instance_create( view_xview[0] + global.UI_Skill_X, view_yview[0] + global.UI_Skill_Y, Object_UI_Skill ) ) {
    
        global.UI_Skill = true;
        global.UI_Skill_ID = id;
    
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//UI=========================================================================================================================================================================================================================================================\\

if( global.UI_Inventory == false &amp;&amp; keyboard_check_released( ord('I') ) ) {

    with( instance_create( view_xview[0] + global.UI_Inventory_X, view_yview[0] + global.UI_Inventory_Y, Object_UI_Inventory ) ) {
    
        global.UI_Inventory = true;
        global.UI_Inventory_ID = id;
    
    }

}

if( global.UI_Stat == false &amp;&amp; keyboard_check_released( ord('U') ) ) {

    with( instance_create( view_xview[0] + global.UI_Stat_X, view_yview[0] + global.UI_Stat_Y, Object_UI_Stat ) ) {
    
        global.UI_Stat = true;
        global.UI_Stat_ID = id;
    
    }

}

if( global.UI_Skill == false &amp;&amp; keyboard_check_released( ord('O') ) ) {

    with( instance_create( view_xview[0] + global.UI_Skill_X, view_yview[0] + global.UI_Skill_Y, Object_UI_Skill ) ) {
    
        global.UI_Skill = true;
        global.UI_Skill_ID = id;
    
    }

}

//Camera===========================================================================================================================================================================================================================================================\\

if( view_xview[0] &gt; Object_Player.x - ( view_wview / 2 ) ) { view_xview[0] -= ( view_xview[0] - ( Object_Player.x - ( view_wview / 2 ) ) ) / 10; }
if( view_xview[0] &lt; Object_Player.x - ( view_wview / 2 ) ) { view_xview[0] += ( ( Object_Player.x - ( view_wview / 2 ) ) - view_xview[0] ) / 10; }
if( view_yview[0] &gt; Object_Player.y - ( view_hview / 2 ) ) { view_yview[0] -= ( view_yview[0] - ( Object_Player.y - ( view_hview / 2 ) ) ) / 10; }
if( view_yview[0] &lt; Object_Player.y - ( view_hview / 2 ) ) { view_yview[0] += ( ( Object_Player.y - ( view_hview / 2 ) ) - view_yview[0] ) / 10; }

view_xview[0] += random_range( -global.Camera_Shake, global.Camera_Shake );
view_yview[0] += random_range( -global.Camera_Shake, global.Camera_Shake );

if( view_xview[0] &lt; 0 ) { view_xview[0] = 0; }
if( view_yview[0] &lt; 0 ) { view_yview[0] = 0; }
if( view_xview[0] + view_wview[0] &gt; room_width ) { view_xview[0] = room_width - view_wview[0] ; }
if( view_yview[0] + view_hview[0] &gt; room_height ) { view_yview[0] = room_height - view_hview[0] ; }

if( global.Camera_Shake &gt; 0 ) { global.Camera_Shake -= global.Camera_Shake / 10; }

clamp( global.Camera_Shake, 0, 25 );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
