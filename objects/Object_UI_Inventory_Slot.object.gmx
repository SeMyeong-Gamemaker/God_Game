<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Sprite_UI_Inventory_Slot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Slot_Item = noone;
Slot_Amount = noone;
Slot_Font = font_add_sprite( Sprite_Font_5, ord( '!' ), true, 1 );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = view_xview[0] + global.UI_Inventory_X + Slot_X;
y = view_yview[0] + global.UI_Inventory_Y + Slot_Y;

switch( global.UI_Inventory_Tab ) {

    case "Equipment" :
    
        Slot_Item = global.Inventory_Slot_Equipment[Slot_Height,Slot_Width];
        Slot_Amount = noone;
        break;
    
    case "Consumable" :
    
        Slot_Item = global.Inventory_Slot_Consumable[Slot_Height,Slot_Width];
        Slot_Amount = global.Inventory_Slot_Consumable_Amount[Slot_Height,Slot_Width];
        break;
    
    case "Misc" :
    
        Slot_Item = global.Inventory_Slot_Misc[Slot_Height,Slot_Width];
        Slot_Amount = global.Inventory_Slot_Misc_Amount[Slot_Height,Slot_Width];
        break;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch( global.UI_Inventory_Tab ) {

    case "Equipment" :
    
        if( Slot_Item != noone ) {
        
            global.Inventory_Slot_Equipment[Slot_Height,Slot_Width] = global.Equipment_Slot_Weapon;
            global.Equipment_Slot_Weapon = Slot_Item;
            Slot_Item = noone;
        
        }
        break;
    
    case "Consumable" :

        if( Slot_Item != noone &amp;&amp; Slot_Amount &gt; 0 &amp;&amp; global.Player_Healing == false ) {
        
            global.Player_Healing = true;
            global.Player_Healing_Amount = global.Item[Slot_Item,4];
            global.Player_Healing_Time = global.Item[Slot_Item,5];
            with( Object_Player ) { alarm[2] = global.Player_Healing_Time; }
            
            global.Inventory_Slot_Consumable_Amount[Slot_Height,Slot_Width]--;
            if( global.Inventory_Slot_Consumable_Amount[Slot_Height,Slot_Width] &lt;= 0 ) {
            
                global.Inventory_Slot_Consumable[Slot_Height,Slot_Width] = noone;
                global.Inventory_Slot_Consumable_Amount[Slot_Height,Slot_Width] = noone;
            
            }
        
        }
        break;
    
    case "Misc" :
    
        break;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha( 1 );
draw_set_font( Slot_Font );
draw_self();
draw_set_valign( fa_bottom );
draw_set_halign( fa_left );
if( Slot_Item != noone ) { draw_sprite( global.Item[Slot_Item,3], -1, x, y ); }
if( Slot_Amount != noone ) { draw_text_colour( x - 12, y + 12, string( Slot_Amount ), c_white, c_white, c_white, c_white, 1 ); }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
